@page "/"

@inject Digester Digester
@inject IConfiguration Configuration

<h1>Verifica numero telefonico</h1>


<div>
    <p>Inserisci numero telefonico con formato</p>
    <ul>
        <li>id,telefono</li>    
    </ul>
</div>
<div>
    <label class="col-form-label">
        Inserisci il numero di telefono:
        <input type="text" @bind="PhoneInput" />
    </label>
    <button class="btn-info" @onclick="Submit">Submit</button>
    <br />
    <p> <label>Risultato: </label><b>@Result</b></p>
    <p> <label>Id: </label><b>@Id</b></p>
    <p> <label>Phone: </label><b>@Phone</b></p>
</div>
<br />
<br />
<div>
    <h3>Utilizzo della API</h3>
    <p>Indirizzo: /api/phoneparser</p>
    <p>Inserire il file binario da processare allegato nel body.</p>
</div>


@code
{

    private string PhoneInput;
    public string Id;
    public string Phone;
    public string Result;

    protected override void OnInitialized()
    {
        if (Digester == null)
            Digester = new Digester();
        var digesterOptions = new DigesterOptions();
        Configuration.GetSection(DigesterOptions.PhoneParser).Bind(digesterOptions);
        Digester.AcceptanceRules = digesterOptions.AcceptanceRules;
        Digester.CorrectionRules = digesterOptions.CorrectionRules;
        Digester.AllOtherRules = digesterOptions.AllOtherRules;
    }

    private void Submit()
    {
        Digester.PhoneRecords.Add(new PhoneRecord { Input = PhoneInput });
        var record = new PhoneRecord { Input = PhoneInput };
        record = Digester.DigestRecord(record);
        Phone = record.Phone;
        Id = record.Id;
        Result = record.Result;
    }

}